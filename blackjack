package program;

import java.util.*;
//딜러카드 2장 플레이어카드 2장을 받는다.
//딜러카드의 첫번째 카드만 오픈한다.
//플레이어카드의 합이 21을 넘지 않으면 카드를 더 받을지 말지 정한다.
//플레이어의 카드의 합이 21이 넘어가면 패배
//카드를 그만 받으면 딜러와 플레이어 카드를 오픈한다.
//딜러 카드의 합이 17이상이 안되면 카드를 한장씩 받는다.
//딜러의 카드의 합이 21이 넘어가면 패배
//딜러의 카드의 합이 17이상이 되면 둘다 카드받기를 종료한다.
//카드의 합이 21에 가까운쪽이 이긴다.(같으면 비김)
//A는 11로 처리
//2, 3, 4, 5, 6, 7, 8, 9, 10, (J, Q, K)->10, A = 11
//출력할땐 영어카드로 출력되지만 계산할땐 각자 정해진 숫자로 계산
//A카드 + K카드 = 카드의 합은 21

class Deck{ //딜러와 플레이어의 카드를 받는 클래스
	List<Integer> playerD = new ArrayList<>();	// 플레이어 카드 덱
	List<Integer> dealerD = new ArrayList<>();	// 딜러 카드 덱
	Random ran = new Random();
	int dealerSum;	// 딜러카드들의 총합
	int playerSum;	// 플레이어 카드들의 총합

	public void dealer() { // 맨 처음 받는 딜러카드 2장 (2, 3, 4, 5, 6, 7, 8, 9, 10,(J, Q, K)->10, A = 11)
		dealerD.add(ran.nextInt(13)+2);
		dealerD.add(ran.nextInt(13)+2);
		int b =dealerD.get(0);
		System.out.println("딜러의 첫번째 카드는 "+(b<11?b:(b<12?"J":(b<13?"Q":(b<14?"K":"A"))))+"카드 입니다.\n");
		// 딜러 첫번째 카드 오픈
		dealerD.forEach((a) -> {	// 딜러카드들의 총합
			if(a>10 && a!=14) {
				dealerSum+=10;
			}else if(a==14){
				dealerSum+=11;
			}else {
				dealerSum+=a;
			}	
		});
		if (dealerSum>21) {
			System.out.println("딜러가 패배하였습니다.");
			System.exit(0);
		} else if(dealerSum==21) {
			System.out.println("딜러가 승리하였습니다.");
			//System.exit(0);
		}
		
	}
	
	public void player() {	// 맨 처음 플레이어 카드 받는 2장 (2, 3, 4, 5, 6, 7, 8, 9, 10,(J, Q, K)->10, A = 11)
		playerD.add(ran.nextInt(13)+2);
		playerD.add(ran.nextInt(13)+2);
		playerD.forEach((a) -> System.out.println("플레이어의 카드는 "+ (a<11?a:(a<12?"J":(a<13?"Q":(a<14?"K":"A"))))+"카드 입니다."));
		// 플레이어 카드 2장 오픈
		playerSum=0;
		playerD.forEach((a) -> {	// 플레이어카드들의 총합
			if(a>10 && a!=14) {
				playerSum+=10;
			}else if(a==14){
				playerSum+=11;
			}else {
				playerSum+=a;
			}	
		});
		
		System.out.println();
		System.out.println("플레이어 카드들의 합: "+playerSum);
		
		if (playerSum>21) {
			System.out.println("플레이어가 패배하였습니다.");
			System.exit(0);
		} else if(playerSum==21) {
			System.out.println("플레이어가 승리하였습니다.");
			System.exit(0);
		}
		
	}
	
	public void add () { // 플레이어의 카드를 추가 하는 메소드
		playerD.add(ran.nextInt(13)+2);
		playerD.forEach((a) -> System.out.println("플레이어의 카드는 "+ (a<11?a:(a<12?"J":(a<13?"Q":(a<14?"K":"A"))))+"카드 입니다."));
		playerSum=0;
		playerD.forEach((a) -> {
			if(a>10 && a!=14) {
				playerSum+=10;
			} else if(a==14){
				playerSum+=11;
			} else {
				playerSum+=a;
			}	
		});
		System.out.println();
		System.out.println("플레이어카드들의 합: "+playerSum);
		if (playerSum>21) {
			System.out.println("플레이어가 패배하였습니다.");
			System.exit(0);
		} else if(playerSum==21) {
			System.out.println("플레이어가 승리하였습니다.");
			//System.exit(0);
		}
	}
	
	public void dealerAdd () {	// 딜러의 카드를 추가하는 메소드
			while (dealerSum<17) { // 딜러의 카드의 합이 17미만 이면 카드를 받는다
			dealerD.add(ran.nextInt(13)+2);
			dealerD.forEach((a) -> System.out.println("딜러의 카드는 "+ (a<11?a:(a<12?"J":(a<13?"Q":(a<14?"K":"A"))))+"카드 입니다."));
			dealerSum=0;
			dealerD.forEach((a) -> {
				if(a>10 && a!=14) {
					dealerSum+=10;
				} else if(a==14){
					dealerSum+=11;
				} else {
					dealerSum+=a;
				}	
			});
			System.out.println();
			System.out.println("딜러 카드들의 합: "+dealerSum);
			if (dealerSum>21) {
				System.out.println("딜러가 패배하였습니다.");
				System.exit(0);
			} else if(dealerSum==21) {
				System.out.println("딜러가 승리하였습니다.");
				break;
			}
		
		}
	
	}

}

public class BlackJack {

	public static void main(String[] args) {
		
		System.out.println("당신은 오늘부터 프로겜블러가 되기 위해 연습을 해야 합니다.");
		System.out.println("블랙잭을 마스터 하십시오.");
		System.out.println("시작하시겠습니다? 1:Yes, 2:no");
		Scanner in = new Scanner(System.in);
		
		int n = in.nextInt();
		if(n!=1) {	// 1번 선택시 게임 시작
			System.out.println("게임이 종료되었습니다.");
			System.exit(0);
		}
		
		Deck deck = new Deck();
		deck.dealer();	// 플레이어 카드 생성
		deck.player();	// 딜러 카드 생성
		
		int dealer=deck.dealerSum;
		int player=deck.playerSum;	
		
		while(true) { // 게임이 종료되기 전까지 계속 카드를 추가로 받음
			System.out.println();
			System.out.println("추가로 카드를 더 받으시겠습니까? \n1: Hit, 2: Stand ");
			int addCard = in.nextInt(); // 1번 선택시 카드 받기, 2번 선택시 카드 오픈
				if(addCard==1) {
					deck.add();
					deck.playerD.get(0);
				} else if (addCard==2) {
					
					deck.dealerAdd();// 딜러 카드 받기 or stop
					
					player=deck.playerSum;
					dealer=deck.dealerSum;
					if(player-dealer>0) {
						System.out.println();
						deck.dealerD.forEach((a) -> System.out.println("딜러의 카드는 "+ (a<11?a:(a<12?"J":(a<13?"Q":(a<14?"K":"A"))))+"카드 입니다."));
						System.out.println("플레이어 카드들의 합: "+player);
						System.out.println("딜러 카드들의 합: "+dealer);
						System.out.println("플레이어 Win!");
					} else if (player-dealer==0) {
						System.out.println();
						deck.dealerD.forEach((a) -> System.out.println("딜러의 카드는 "+ (a<11?a:(a<12?"J":(a<13?"Q":(a<14?"K":"A"))))+"카드 입니다."));
						System.out.println("플레이어 카드들의 합: "+player);
						System.out.println("딜러 카드들의 합: "+dealer);
						System.out.println("Tie 비겼습니다!");						
					} else {
						System.out.println();
						deck.dealerD.forEach((a) -> System.out.println("딜러의 카드는 "+ (a<11?a:(a<12?"J":(a<13?"Q":(a<14?"K":"A"))))+"카드 입니다."));
						System.out.println("플레이어 카드들의 합: "+player);
						System.out.println("딜러 카드들의 합: "+dealer);
						System.out.println("딜러 Win!");
					}
					break;
				} 
			}
	}

}
